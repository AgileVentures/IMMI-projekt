-# Submit the changed reason via javascript when a member_app_waiting_reasons_id is selected from the list or custom_reason_text is changed.
  Do not make user press a "save" or "submit" button for these changes. (use AJAX)


= form_for @membership_application, html: { id: 'member-app-waiting-reasons', multipart: true}, url: membership_application_path do |f|
  .row
    .container
      .reason-waiting-information
        = f.label( :member_app_waiting_reasons, t('membership_applications.need_info.reason_title'))
        = f.collection_select(:member_app_waiting_reasons_id,
                              AdminOnly::MemberAppWaitingReason.all,
                              :id,
                              reason_name_method,
                              { include_blank: t('membership_applications.need_info.select_a_reason') },
                              { class: 'reason-waiting-list',
                                onchange: 'changed_reason()' },
                              )

  .row
    .container
      #other-text-field
        = f.label( :reason_waiting_custom_text, t('membership_applications.need_info.other_reason_label') )
        = f.text_field :custom_reason_text, onchange: 'changed_custom_text()'


:javascript

  let reasons_list = document.getElementById('membership_application_member_app_waiting_reasons_id');  // the select HTML element (list)
  let custom_text_info = $('#other-text-field');
  let custom_text_field = $('#membership_application_custom_reason_text');

  // this option is added to the list of reasons and is only used so we can show/hide the custom reason text field
  let other_reason_text = "#{@other_waiting_reason_text}";
  let other_reason_option = document.createElement("option");
  other_reason_option.text = other_reason_text;
  other_reason_option.value = -1;  // some value that will not be in the database or use by Rails



  function selected_is_customOtherReason() {
    return reasons_list.value === other_reason_option.value;
  }


  // send the reason selected to the server unless the 'custom/other' was selected
  function changed_reason() {
     // do not send a request if the reason selected is the "Other/custom... enter text" reason
     //  wait until the text field with the custom reason is entered to send that data

    if (!selected_is_customOtherReason()) {
      custom_text_field.val('');
      send_updated_reason( #{@membership_application.id}, $('#membership_application_member_app_waiting_reasons_id').find('option:selected').val() , null );
    }
    hideOrShowCustomReasonElements();

   }


  // Set the waiting_reason to nil because we instead have the info in the custom text field
  function changed_custom_text() {
    send_updated_reason( #{@membership_application.id}, null , custom_text_field.val() );
    custom_text_info.show();
   }


  let hideOrShowCustomReasonElements = function() {

    if (  custom_text_field.val() || selected_is_customOtherReason()) {
      custom_text_info.show();
      reasons_list.value = other_reason_option.value; // make sure this option is selected; important when first displaying the view
    }
    else {
        // clear out any custom reason if the selected reason is not the custom reason
        document.getElementById("membership_application_custom_reason_text").value = "";
        custom_text_info.hide();
    }

  };


  // Send information to the server
  //  no need to do anything if it was successful
  let send_updated_reason = function(app_id, reason_id, custom_text) {

    $.ajax({
      url: "#{membership_application_path}",
      type: "PUT",
      data: { membership_application: { member_app_waiting_reasons_id: reason_id,
        custom_reason_text: custom_text },
        id: app_id }
    }).fail(function(evt, xhr, status, err) {
      alert( "#{I18n.t('membership_applications.update.error')}: " + 'Status: ' + evt.statusText );
    });

  };


  let initialize = (function() {
    reasons_list.options.add(other_reason_option);  // add the other_reason to the list
    hideOrShowCustomReasonElements();
  });

  $(document).ready(initialize);

