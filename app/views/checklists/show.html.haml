- user_can_edit = policy(@checklist).update?

%header.entry-header
  %h1.entry-title= t('.title', name: @checklist.name)

.entry-content.container

  - if @checklist.ancestors?
    .row.mt-2
      .col
        %h4
          Parent checklist:
          = link_to @checklist.parent.name, checklist_path(@checklist.parent)

  .row.mt-2
    .col
      - unless @checklist.description.nil?
        %p
          %b= #{t('.description')}
          = @checklist.description

  .row.mt-2
    .col
      %p{style: "font-style: italic"} How to put the child lists into order? (and what if a list occurs in more than 1 parent list?)

  .row.mt-2
    .col
      - unless @checklist.checklist_items.empty?
        %h4.checklist-items Checklist items:
        %ul.checklist-items
          - @checklist.checklist_items.sort{ |a, b| a.order_in_list <=> b.order_in_list }.each do | item |
            =as_li_ordered_entry_item(item)

      - if @checklist.children?
        %h4.child-checklists Child checklists:
        =arranged_tree_as_list(@checklist.children.arrange, {sort_by: [:id],
          ul_class: ['child-checklists'], li_class: ['child-checklist']}) do | child_checklist |
          = link_to child_checklist.name, checklist_path(child_checklist)
          -#=as_li_ordered_entry_list(child_checklist)


  %hr
    .text-center
      - if user_can_edit
        = link_to "Edit Checklist",
                    edit_checklist_path(@checklist), class: 'btn btn-secondary btn-sm edit-checklist'

      - if current_user.admin?
        = link_to "Delete checklist", @checklist, method: :delete,
                        class:'btn btn-danger btn-sm delete-checklist',
                        data: { confirm: t('.delete_confirm', name: @checklist.name) }
