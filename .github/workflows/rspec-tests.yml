# Put this in the file: .github/workflows/verify.yml

name: rspec
on:
  workflow_dispatch:
  push:
    branches:
      - sprint119-backups-aws-tagging-prefixes
  pull_request:
    types: [assigned, opened, edited, synchronize, reopened]
    branches:
      - sprint119-backups-aws-tagging-prefixes
jobs:

#  linters:
#    name: Linters
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Setup Ruby and install gems
#        uses: ruby/setup-ruby@v1
#        with:
#          bundler-cache: true
#
#      - name: Setup Node
#        uses: actions/setup-node@v1
#        with:
#          node-version: 10.13.0
#      - name: Find yarn cache location
#        id: yarn-cache
#        run: echo "::set-output name=dir::$(yarn cache dir)"
#      - name: JS package cache
#        uses: actions/cache@v1
#        with:
#          path: ${{ steps.yarn-cache.outputs.dir }}
#          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-yarn-
#      - name: Install packages
#        run: |
#          yarn install --pure-lockfile
#
#      - name: Run linters
#        run: |
#          bin/rubocop --parallel
#          bin/stylelint
#          bin/prettier
#          bin/eslint
#      - name: Run security checks
#        run: |
#          bin/bundler-audit --update
#          bin/brakeman -q -w2

  tests:
    name: Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: ashleyengelund/postgres-sv-se:postgres9-6-sv_se
        env:
          POSTGRES_USER: shf-project
          POSTGRES_DB: shf-project_test
          POSTGRES_PASSWORD: ""
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Ruby and install gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 10.13.0
      - name: Find yarn cache location
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: JS package cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install packages
        run: |
          yarn install --pure-lockfile

      - name: Setup test database
        env:
          RAILS_ENV: test
          PGHOST: localhost
          PGUSER: shf-project
        
        run: |
          bundle exec bin/rails db:create db:migrate
          bundle exec bin/rails db:schema:dump
          bundle exec bin/rails db:test:prepare

      - name: Run tests
        run: bin/rspec
